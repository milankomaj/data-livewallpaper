name: Unit tests

on:
  workflow_dispatch:

  pull_request_target:
    branches:
      - '**' 
  schedule:
    - cron: '1 2 */17 * *'
jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v2
    - name: Execute tests
      run: |
       cd ./gradle/wrapper
       rm gradle-wrapper.jar
       RELEASE=$(curl -L -s -H 'Accept: application/json' https://services.gradle.org/versions/current | jq .version | sed -e 's/"//g')
       echo Gradle wrapper:
       echo RELEASE = $RELEASE
       URL=$(curl -s -L -o gradle.zip https://services.gradle.org/distributions/gradle-$(curl -L -s -H 'Accept: application/json' https://services.gradle.org/versions/current | jq .version | sed -e 's/"//g')-src.zip)
       wrapper=$(unzip -j -d . gradle.zip gradle-$(curl -L -s -H 'Accept: application/json' https://services.gradle.org/versions/current | jq .version | sed -e 's/"//g')/gradle/wrapper/gradle-wrapper.jar)
       SHA=$(curl -s --location --output gradle-wrapper.jar.sha256 https://services.gradle.org/distributions/gradle-$(curl -L -s -H 'Accept: application/json' https://services.gradle.org/versions/current | jq .version | sed -e 's/"//g')-wrapper.jar.sha256)
       echo "  gradle-wrapper.jar" >> gradle-wrapper.jar.sha256
       sha256sum --check gradle-wrapper.jar.sha256
       rm gradle.zip
       cd ..
       cd ..
       echo --------------------------------------
       chmod +x ./gradlew
       ./gradlew -v 
       echo Gradle Test
       ./gradlew test
        echo Gradle assembleDebug
       ./gradlew assembleDebug
       
  timestamp:
      runs-on: ubuntu-latest
      needs: testing
      steps:
      - uses: actions/checkout@v2
      - name: Timestamp Unit tests
        shell: bash
        run: |
           date >> ./timestamp
           zone=$(TZ='Europe/Bratislava' date -r ./timestamp)
           sed -i "7s/.*/- #####  Unit tests: $zone/" ./.github/README.md
           echo Timestamp : $zone
           git config --global user.email ${{ secrets.EMAIL }}
           git config --global user.name ${{ secrets.NAME }}        
           git add ./.github/README.md
           git commit -m "timestamp" ./.github/README.md
           git push --force         

  
  dependabot:
      name: Dependabot auto-merge   
      runs-on: ubuntu-latest 
      needs: [timestamp,testing]    
      if: ${{ github.actor == 'dependabot[bot]' }}
      steps:
        - name: Dependabot metadata
          id: dependabot-metadata
          uses: dependabot/fetch-metadata@v1.1.1
          with:
            github-token: "${{ secrets.GITHUB_TOKEN }}"
        - name: Enable auto-merge for Dependabot PRs
          run: gh pr merge --auto --merge "$PR_URL"
          env:
            PR_URL: ${{github.event.pull_request.html_url}}
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
